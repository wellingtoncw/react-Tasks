{"ast":null,"code":"var _jsxFileName = \"/home/well/\\xC1rea de Trabalho/curso-react/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport './App.css'; //O componente App é pai do componente Tasks pois o App é quem está renderizando o Tasks;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const message = 'Hello World'\n  const [tasks, setTasks] = useState([{\n    id: '1',\n    title: 'Estudar programação',\n    completed: false\n  }, {\n    id: '2',\n    title: 'Ler livros',\n    completed: true\n  }]); // utilizando o state. Só quando o state é atualizado que o componente em si é atualizado\n\n  const handleTaskAddition = taskTitle => {\n    const newTasks = [...tasks, {\n      title: taskTitle,\n      id: Math.random(10),\n      completed: false\n    }];\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"e1ur304j0oJc04DTwW10MIwdKus=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/well/Área de Trabalho/curso-react/src/App.jsx"],"names":["React","useState","Tasks","AddTask","App","tasks","setTasks","id","title","completed","handleTaskAddition","taskTitle","newTasks","Math","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP,C,CAEA;;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC;AACEM,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE,qBAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE,YAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GANiC,CAAD,CAAlC,CAFgB,CAaZ;;AAEJ,QAAMC,kBAAkB,GAAIC,SAAD,IAAe;AACxC,UAAMC,QAAQ,GAAG,CAAC,GAAGP,KAAJ,EAAW;AAC1BG,MAAAA,KAAK,EAAEG,SADmB;AAE1BJ,MAAAA,EAAE,EAAEM,IAAI,CAACC,MAAL,CAAY,EAAZ,CAFsB;AAG1BL,MAAAA,SAAS,EAAE;AAHe,KAAX,CAAjB;AAKD,GAND;;AASA,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAIJ;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAQD,CAhCD;;GAAMD,G;;KAAAA,G;AAkCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport './App.css'\n\n//O componente App é pai do componente Tasks pois o App é quem está renderizando o Tasks;\n\n\nconst App = () => {\n  // const message = 'Hello World'\n  const [tasks, setTasks] = useState([\n    {\n      id: '1',\n      title: 'Estudar programação',\n      completed: false\n    },\n    {\n      id: '2',\n      title: 'Ler livros',\n      completed: true\n    },\n  ])  // utilizando o state. Só quando o state é atualizado que o componente em si é atualizado\n\n  const handleTaskAddition = (taskTitle) => {\n    const newTasks = [...tasks, {\n      title: taskTitle,\n      id: Math.random(10),\n      completed: false,\n    }]\n  }\n\n\n  return (\n    <>\n    <div className=\"container\">\n      <AddTask />\n      <Tasks tasks = {tasks}/>\n    </div>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}