{"ast":null,"code":"var _jsxFileName = \"/home/well/\\xC1rea de Trabalho/curso-react/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport TaskDetails from './components/TaskDetails';\nimport './App.css'; //O componente App é pai do componente Tasks pois o App é quem está renderizando o Tasks;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const message = 'Hello World'\n  const [tasks, setTasks] = useState([{\n    id: '1',\n    title: 'Estudar programação',\n    completed: false\n  }, {\n    id: '2',\n    title: 'Ler livros',\n    completed: true\n  }]); // utilizando o state. Só quando o state é atualizado que o componente em si é atualizado\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const {\n        data\n      } = await axios.get('https://jsonplaceholder.cypress.io/todos?_limit=10');\n      setTasks(data);\n    };\n\n    fetchTasks();\n  }, []);\n\n  const handleTaskAddition = taskTitle => {\n    const newTasks = [...tasks, {\n      title: taskTitle,\n      id: uuidv4(),\n      completed: false\n    }];\n    setTasks(newTasks);\n  };\n\n  const handleTaskDeletion = taskId => {\n    const newTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(newTasks);\n  };\n\n  const handleTaskClick = taskId => {\n    const newTasks = tasks.map(task => {\n      if (task.id === taskId) return { ...task,\n        completed: !task.completed\n      };\n      return task;\n    });\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AddTask, {\n            handleTaskAddition: handleTaskAddition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            handleTaskClick: handleTaskClick,\n            handleTaskDeletion: handleTaskDeletion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:taskTitle\",\n        exact: true,\n        component: TaskDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"gvD+ngL+KwU70/1go3OUhxijkFs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/well/Área de Trabalho/curso-react/src/App.jsx"],"names":["React","useState","useEffect","axios","v4","uuidv4","BrowserRouter","Router","Route","Header","Tasks","AddTask","TaskDetails","App","tasks","setTasks","id","title","completed","fetchTasks","data","get","handleTaskAddition","taskTitle","newTasks","handleTaskDeletion","taskId","filter","task","handleTaskClick","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport {v4 as uuidv4} from 'uuid'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport TaskDetails from './components/TaskDetails'\n\nimport './App.css'\n\n//O componente App é pai do componente Tasks pois o App é quem está renderizando o Tasks;\n\n\nconst App = () => {\n  // const message = 'Hello World'\n  const [tasks, setTasks] = useState([\n    {\n      id: '1',\n      title: 'Estudar programação',\n      completed: false\n    },\n    {\n      id: '2',\n      title: 'Ler livros',\n      completed: true\n    },\n  ])  // utilizando o state. Só quando o state é atualizado que o componente em si é atualizado\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const {data} = await axios.get('https://jsonplaceholder.cypress.io/todos?_limit=10')\n      setTasks(data)\n    }\n    fetchTasks()\n  }, [])\n\n  const handleTaskAddition = (taskTitle) => {\n    const newTasks = [...tasks, {\n      title: taskTitle,\n      id: uuidv4(),\n      completed: false,\n    }]\n\n    setTasks(newTasks)\n  }\n\n  const handleTaskDeletion = (taskId) => {\n    const newTasks = tasks.filter( task => task.id !== taskId )\n    \n    setTasks(newTasks)\n  }\n\n  const handleTaskClick = (taskId) => {\n    const newTasks = tasks.map((task) => {\n      if(task.id === taskId) return {...task, completed: !task.completed }\n\n      return task\n    })\n\n    setTasks(newTasks)\n  }\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header />\n      <Route path=\"/\" exact render={() => (\n        <>\n          <AddTask handleTaskAddition={handleTaskAddition} />\n          <Tasks \n            tasks = {tasks}\n            handleTaskClick={handleTaskClick}\n            handleTaskDeletion={handleTaskDeletion}\n          />\n        </>\n      )} />\n      \n     <Route path=\"/:taskTitle\" exact component={TaskDetails} />   \n\n    </div>\n    </Router>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}